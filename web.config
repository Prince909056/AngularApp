<?xml version="1.0" encoding="utf-8"?>
<!-- WebAppAngular | Optimized for Angular SPA with HTTPS & Routing Support -->

<configuration>

  <!-- Optional: Legacy .NET section (harmless, safe to keep) -->
  <system.web>
    <compilation debug="false" targetFramework="4.5" />
    <pages controlRenderingCompatibilityVersion="4.0" />
  </system.web>

  <system.webServer>

    <!-- Static files MIME mapping -->
    <staticContent>
      <remove fileExtension=".json" />
      <mimeMap fileExtension=".json" mimeType="application/json" />
      <mimeMap fileExtension=".woff" mimeType="application/font-woff" />
      <mimeMap fileExtension=".woff2" mimeType="application/font-woff2" />
      <mimeMap fileExtension=".ttf" mimeType="application/font-sfnt" />
    </staticContent>

    <!-- Angular Routing & HTTPS Rules -->
    <rewrite>
      <rules>

        <!-- Rule 1: Redirect Angular routes to index.html -->
        <rule name="Angular SPA Routes" stopProcessing="true">
          <match url=".*" />
          <conditions logicalGrouping="MatchAll">
            <!-- Ignore actual files and directories -->
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
            <!-- Ignore API calls -->
            <add input="{REQUEST_URI}" pattern="^/(api)" negate="true" />
          </conditions>
          <!-- Rewrite to index.html for SPA routing -->
          <action type="Rewrite" url="/index.html" />
        </rule>

        <!-- Rule 2: HTTPS redirect (for AWS Load Balancer / reverse proxy) -->
        <rule name="Force HTTPS Behind Load Balancer" enabled="true" stopProcessing="true">
          <match url="^(.*)$" ignoreCase="false" />
          <conditions>
            <!-- Check if request came via HTTP -->
            <add input="{HTTP_X_FORWARDED_PROTO}" pattern="^http$" ignoreCase="true" />
          </conditions>
          <!-- Redirect to HTTPS version -->
          <action type="Redirect" url="https://{SERVER_NAME}{URL}" redirectType="Permanent" />
        </rule>

        <!-- Rule 3: Force HTTPS (Azure Compatible) -->
        <rule name="Force HTTPS on Azure" enabled="true" stopProcessing="true">
          <match url="(.*)" ignoreCase="true" />
          <conditions>
            <!-- Check if HTTPS is off -->
            <add input="{HTTPS}" pattern="off" ignoreCase="true" />
            <!-- OR check if Azure forwarded header says HTTP -->
            <add input="{HTTP_X_FORWARDED_PROTO}" pattern="^http$" ignoreCase="true" />
          </conditions>
          <action type="Redirect" url="https://{HTTP_HOST}/{R:1}" redirectType="Permanent" />
        </rule>

      </rules>
    </rewrite>

    <!-- Disable directory browsing for security -->
    <directoryBrowse enabled="false" />

    <!-- Enable gzip/brotli compression for faster load -->
    <httpCompression>
      <dynamicTypes>
        <add mimeType="text/*" enabled="true" />
        <add mimeType="application/javascript" enabled="true" />
        <add mimeType="application/json" enabled="true" />
        <add mimeType="application/xml" enabled="true" />
      </dynamicTypes>
      <staticTypes>
        <add mimeType="text/*" enabled="true" />
        <add mimeType="application/javascript" enabled="true" />
        <add mimeType="application/json" enabled="true" />
        <add mimeType="application/xml" enabled="true" />
      </staticTypes>
    </httpCompression>

  </system.webServer>
</configuration>
